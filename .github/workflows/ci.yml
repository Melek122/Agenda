name: PHP Native CI/CD Workflow

on:
  push:
    branches:
      - main  # Exécute le workflow à chaque push sur la branche principale
  pull_request:
    branches:
      - main  # Exécute le workflow lors d'une pull request sur la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Machine virtuelle Ubuntu fournie par GitHub

    services:
      mysql:
        image: mysql:8.0  # Utilisation de l'image MySQL 8.0
        env:
          MYSQL_ROOT_PASSWORD: root  # Mot de passe root pour MySQL
          MYSQL_DATABASE: testdb  # Base de données test
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"  # Vérification de la santé de MySQL

    steps:
      # Étape 1 : Récupérer le code source depuis le dépôt GitHub
      - name: Checkout code
        uses: actions/checkout@v2  # Clone le code de votre dépôt GitHub

      # Étape 2 : Configurer PHP (installation de PHP 8.3 et des extensions mysqli)
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3.13'  # Version PHP à utiliser
          extensions: mysqli  # Active l'extension mysqli pour la connexion à MySQL

      # Étape 3 : Vérification de la syntaxe PHP (vérifie tous les fichiers PHP du projet)
      - name: Check PHP syntax
        run: |
          find . -name "*.php" -exec php -l {} \;  # Vérifie la syntaxe de tous les fichiers PHP

      # Étape 4 : Afficher les logs du conteneur MySQL pour faciliter le débogage
      - name: Show MySQL logs
        run: |
          docker logs $(docker ps -q -f "ancestor=mysql:8.0")  # Affiche les logs du conteneur MySQL

      # Étape 5 : Vérifier si le conteneur MySQL est en cours d'exécution
      - name: Check if MySQL container is running
        run: |
          docker ps -a  # Vérifie l'état de tous les conteneurs, y compris MySQL

      # Étape 6 : Tester la connexion MySQL avec une augmentation du délai d'attente
      - name: Test MySQL connection
        run: |
          echo "Waiting for MySQL to be ready..."
          timeout=120  # Augmenter le délai d'attente à 120 secondes
          while ! docker exec $(docker ps -q -f "ancestor=mysql:8.0") mysql -uroot -proot -e "SELECT 1;" ; do
            echo "Waiting for MySQL..."
            sleep 2
            ((timeout--))  # Décrémentation du compteur de délai
            if [ $timeout -le 0 ]; then
              echo "MySQL didn't start in time, exiting"
              exit 1  # Échoue si MySQL ne démarre pas dans le délai imparti
            fi
          done
          echo "MySQL is ready!"  # Si MySQL est prêt, on affiche ce message
